class Solution {
    public int[][] merge(int[][] intervals) {
    if(intervals.length < 2) {
            return intervals;
        }
        
        Arrays.sort(intervals, (i1, i2) -> i1[0] - i2[0] );
        
        List<int[]> result = new ArrayList<>();
        
        int start = intervals[0][0];
        int end = intervals[0][1];
        for(int i = 1; i < intervals.length; i++) {
            if(intervals[i][0] <= end) {
                end = Math.max(end, intervals[i][1]);
            } else {
                result.add(new int[]{start, end});
                
                start = intervals[i][0];
                end = intervals[i][1];
            }
        }
        result.add(new int[]{start, end});
        
        return convert(result);
    }
    
    private int[][] convert(List<int[]> rOld) {
        int[][] result = new int[rOld.size()][2];
        int i = 0;
        for(int[] r: rOld) {
            result[i++] = r;
        }
        return result;
    } 
    
}  
